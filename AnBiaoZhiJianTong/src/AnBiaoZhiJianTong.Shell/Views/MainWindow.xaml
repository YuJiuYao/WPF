<Window x:Class="AnBiaoZhiJianTong.Shell.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:viewModels="clr-namespace:AnBiaoZhiJianTong.Shell.ViewModels"
        xmlns:shellChrome="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:views="clr-namespace:AnBiaoZhiJianTong.Shell.Views"
        d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding WindowTitle}"
        Height="800"
        Width="1280"
        MinHeight="640"
        MinWidth="1024"
        WindowStartupLocation="CenterScreen"
        Background="#FFF5F6FA"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="False">

    <WindowChrome.WindowChrome>
        <shellChrome:WindowChrome CaptionHeight="{Binding ElementName=TitleBar, Path=ActualHeight}"
                                  CornerRadius="12"
                                  GlassFrameThickness="0"
                                  ResizeBorderThickness="6"
                                  UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <!-- 色板 -->
        <Color x:Key="PrimaryColor">#2D6BF3</Color>
        <Color x:Key="PrimaryDarkColor">#1847C6</Color>
        <Color x:Key="BorderColor">#D9E6FF</Color>
        <Color x:Key="TextPrimary">#282c34</Color>
        <Color x:Key="TextSecondary">#607087</Color>

        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDarkColor}"/>
        <SolidColorBrush x:Key="HeaderBorderBrush" Color="{StaticResource BorderColor}"/>
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimary}"/>
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondary}"/>

        <!-- 标题栏按钮统一样式（高度28，最小宽36，圆角6） -->
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="28" />
            <Setter Property="MinWidth" Value="36" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="Margin" Value="3, 0, 0,0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="#364152" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E6ECFF" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#CDD9FF" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 圆形头像按钮样式 -->
        <Style x:Key="AvatarButtonStyle"
               BasedOn="{StaticResource TitleBarButtonStyle}"
               TargetType="Button">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="#E8EEFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="18">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E6ECFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#CDD9FF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 菜单按钮（与最小化同规格） -->
        <Style x:Key="TitleMenuButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>

        <!-- 嵌套菜单按钮 -->
        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
            <!-- 鼠标悬停为手型 -->
            <Setter Property="Cursor" Value="Hand"/>

            <!-- 默认：有图标时让文字往右缩进 8px（= 图标与文字的距离） -->
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding}"
                                          RecognizesAccessKey="True"
                                          Margin="8,0,0,0"/>
                        <!-- 这里控制间距，改 8 即可 -->
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <!-- 如果没有图标，就还原为不缩进，保持与你原来的样式一致 -->
            <Style.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding}"
                                                  RecognizesAccessKey="True"
                                                  Margin="0"/>
                                <!-- 无图标不加间距 -->
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- 关闭按钮（稍宽，悬停红色） -->
        <Style x:Key="CloseButtonStyle"
               BasedOn="{StaticResource TitleBarButtonStyle}"
               TargetType="Button">
            <Setter Property="MinWidth" Value="40" />
            <Setter Property="Padding" Value="10,4" />
            <Setter Property="Margin"  Value="3,0,0,0" />
            <!-- 关键：覆盖模板，把触发器放进模板里 -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E81123"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#C50F1F"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 渐变背景 -->
        <LinearGradientBrush x:Key="GradientBackgroundColor" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#F7FAFF" Offset="0"/>
            <GradientStop Color="#F0F6FF" Offset="1"/>
        </LinearGradientBrush>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- 自定义标题栏：左标题，右侧为 信息圆点 + 菜单 + 最小化 + 关闭 -->
        <Border x:Name="TitleBar" 
                Grid.Row="0"
                Background="{StaticResource GradientBackgroundColor}"
                Padding="3,3,5,5"
                shellChrome:WindowChrome.IsHitTestVisibleInChrome="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- 左侧：应用图标 + 标题 -->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Image Source="{StaticResource AppIcon}" 
                           Width="36" 
                           Height="36"
                           Stretch="Uniform"
                           RenderOptions.BitmapScalingMode="HighQuality"/>

                    <TextBlock VerticalAlignment="Center" Margin="6,0,0,0"
                               Foreground="{StaticResource TextPrimaryBrush}">
                        <Run Text="{Binding WindowTitle, Mode=OneWay}"
                             FontSize="15" FontWeight="Normal" Foreground="{StaticResource TextPrimaryBrush}"/>
                        <Run Text=" " FontSize="15"/>
                        <Run Text="{Binding WindowVersion, Mode=OneWay}"
                             FontSize="13" Foreground="{StaticResource TextSecondaryBrush}"/>
                    </TextBlock>
                </StackPanel>

                <!-- 中间占位 -->
                <Border Grid.Column="1" Background="Transparent" />

                <!-- 右侧：用户头像 + 菜单 + 最小化 + 关闭 -->
                <StackPanel Grid.Column="2"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">

                    <!-- 用户头像 -->
                    <Button x:Name="AvatarButton"
                            shellChrome:WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource AvatarButtonStyle}"
                            ToolTip="账户"
                            Margin="0,0,15,0"
                            Click="AvatarButton_Click">
                        <Image Source="{StaticResource UserIcon}"
                               Width="22" Height="22"
                               Stretch="Uniform"
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                        <Button.ContextMenu>
                            <!-- 账户相关项二级菜单 -->
                            <ContextMenu Placement="Bottom"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Button}}" Width="150">
                                <ContextMenu.DataContext>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Button}"/>
                                </ContextMenu.DataContext>
                                <MenuItem Header="用户中心"
                                          Style="{StaticResource MenuItemStyle}"
                                          Visibility="{Binding IsUserAuthenticated, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Click="UserCenterMenuItem_Click">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource SettingIcon}" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="LoginMenuItem"
                                          Header="登录"
                                          Style="{StaticResource MenuItemStyle}"
                                          Visibility="{Binding IsUserUnauthenticated, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Click="LoginMenuItem_Click">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource SettingIcon}" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="LogoutMenuItem"
                                          Header="注销"
                                          Style="{StaticResource MenuItemStyle}"
                                          Visibility="{Binding IsUserAuthenticated, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Click="LogoutMenuItem_Click">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource SettingIcon}" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>

                    <!-- 菜单按钮 -->
                    <Button x:Name="MenuButton"
                            shellChrome:WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleMenuButtonStyle}"
                            ToolTip="菜单"
                            Click="MenuButton_Click">
                        <StackPanel>
                            <Rectangle Height="2" Width="14" Fill="#364152" RadiusX="1" RadiusY="1" Margin="0,2"/>
                            <Rectangle Height="2" Width="14" Fill="#364152" RadiusX="1" RadiusY="1" Margin="0,2"/>
                            <Rectangle Height="2" Width="14" Fill="#364152" RadiusX="1" RadiusY="1" Margin="0,2"/>
                        </StackPanel>
                        <Button.ContextMenu>
                            <ContextMenu Width="150">
                                <MenuItem Header="设置" Style="{StaticResource MenuItemStyle}">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource SettingIcon}" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="关于" Style="{StaticResource MenuItemStyle}">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource SettingIcon}" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="联系我们" Style="{StaticResource MenuItemStyle}">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource SettingIcon}" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>

                    <!-- 最小化 -->
                    <Button x:Name="MinimizeButton"
                            shellChrome:WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource TitleBarButtonStyle}"
                            ToolTip="最小化"
                            Click="MinimizeButton_OnClick">
                        <TextBlock Text="–"
                                   FontSize="16"
                                   FontWeight="Bold"
                                   Margin="0,-2,0,0" />
                    </Button>

                    <!-- 关闭 -->
                    <Button x:Name="CloseButton"
                            shellChrome:WindowChrome.IsHitTestVisibleInChrome="True"
                            Style="{StaticResource CloseButtonStyle}"
                            ToolTip="关闭"
                            Click="CloseButton_OnClick">
                        <TextBlock Text="×"
                                   FontSize="16"
                                   FontWeight="Bold" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <!-- 主内容容器 -->
        <Border Grid.Row="1">
            <!-- Frame 承载 Page；隐藏自带导航 UI，并把导航栈归属于此 Frame -->
            <Frame prism:RegionManager.RegionName="{x:Static views:RegionNames.MainRegion}"
                   NavigationUIVisibility="Hidden"
                   JournalOwnership="UsesParentJournal"
                   Background="{StaticResource GradientBackgroundColor}"/>
        </Border>

        <!-- 底部卡片 步骤条：纯 WPF 阴影 + 渐变背景 -->
        <Border Grid.Row="2"
                Margin="0,12,0,0"
                CornerRadius="12">
            <Border.Effect>
                <DropShadowEffect BlurRadius="12"
                                  ShadowDepth="3"
                                  Direction="200"
                                  Opacity="0.18"
                                  Color="Black"/>
            </Border.Effect>

            <Border Background="{StaticResource GradientBackgroundColor}"
                    Padding="0,5,0,5"
                    BorderBrush="{StaticResource HeaderBorderBrush}"
                    BorderThickness="1">
                <!-- 步骤条 -->
                <StackPanel>
                    <hc:StepBar ItemsSource="{Binding Steps}"
                                StepIndex="{Binding CurrentStepIndex}"
                                IsMouseSelectable="False">
                        <hc:StepBar.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,5,0,0">
                                    <TextBlock Text="{Binding Title}"
                                               HorizontalAlignment="Center"
                                               FontWeight="SemiBold"/>
                                    <TextBlock Text="{Binding Description}"
                                               HorizontalAlignment="Center"
                                               Margin="0,2,0,0"
                                               FontSize="12"
                                               Opacity="0.75"/>
                                </StackPanel>
                            </DataTemplate>
                        </hc:StepBar.ItemTemplate>
                    </hc:StepBar>
                </StackPanel>
            </Border>
        </Border>

        <Border x:Name="LoginMask"
                Grid.Row="0" Grid.RowSpan="3"
                Background="#80000000"
                Visibility="Collapsed"
                Panel.ZIndex="99"/>
    </Grid>
</Window>
