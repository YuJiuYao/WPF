<Page x:Class="AnBiaoZhiJianTong.Shell.Views.CheckOutPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:hc="https://handyorg.github.io/handycontrol"
      xmlns:local="clr-namespace:AnBiaoZhiJianTong.Shell.Views"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      xmlns:viewModels="clr-namespace:AnBiaoZhiJianTong.Shell.ViewModels.Pages"
      Title="CheckOutPage">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- 自定义按钮样式 -->
        <Style x:Key="MenuButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei"/>
            <!-- 若系统无"行楷"，替换为实际字体名 -->
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="4"
            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                        Content="{TemplateBinding Content}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- 鼠标悬停效果 -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#F0F8FF"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="#A5C8FF"/>
                            </Trigger>

                            <!-- 点击/选中效果 -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#4D9EFF"/>
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="White"/>
                            </Trigger>

                            <!-- 禁用状态 -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#F5F5F5"/>
                                <Setter Property="Foreground" Value="#999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- 主按钮样式 -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF2A75F3"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="100"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3367D6"/>
                    <Setter Property="BorderBrush" Value="#FF2A5DC8"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF2A56B5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonStyle1" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter Name="UnCheckedElement"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Border Background="#F2FAFF" BorderThickness="1">
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!-- 左侧主页面 -->
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0">
                    <Image  HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Grid.Column="0" Grid.ColumnSpan="2">
                    <TextBlock Text="检测完成" FontSize="20" FontWeight="Bold" Margin="10,8,10,0" HorizontalAlignment="Center"/>
                    <TextBlock Text="检测结果" FontSize="10" Margin="10,0,10,0" HorizontalAlignment="Center"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="2">
                <Button x:Name="Optimize"  HorizontalAlignment="Right" Style="{StaticResource PrimaryButtonStyle}" Width="150" Content="{Binding ButtonText}" Margin="5,5,15,5" Command="{Binding DynamicCommand}"/>
            </Grid>
            <Border Grid.Row="2" BorderBrush="Gray"  
                BorderThickness="1"
                CornerRadius="5"
                Background="{DynamicResource PrimaryBrush}">
                <Border  BorderBrush="Gray"  
                        BorderThickness="1"
                        CornerRadius="5"
                        Background="White"
                        >
                    <Grid x:Name="LeftPanel">
                        <StackPanel>
                            <TextBlock FontSize="14" FontWeight="SemiBold" Foreground="DodgerBlue">
                                <Run Text="|" Foreground="DodgerBlue"/> <!-- 注意这里的空格 -->
                                <Run Text="所有投标方案" />
                            </TextBlock>

                            <TreeView x:Name="TreeView" ItemsSource="{Binding RootItems}" SelectedItemChanged="TreeView_SelectedItemChanged" Loaded="TreeView_Loaded">
                                <TreeView.Style>
                                    <Style TargetType="TreeView">
                                        <!-- 去除 TreeView 的默认边框 -->
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TreeView">
                                                    <Border BorderThickness="0" >
                                                        <ItemsPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TreeView.Style>
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Number}" Margin="0,0" />
                                            <TextBlock Text="{Binding Title}" Margin="5,0" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                        </StackPanel>
                    </Grid>
                </Border>
            </Border>
            
            <!-- 中间页面 -->
        <Grid x:Name="MiddlePanel" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1">
            <ContentControl x:Name="ErrorCheckPage" />
        </Grid>
         <!--等待遮罩-->
            <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="OverlayGrid" 
              Visibility="{Binding OverlayVisible, Converter={StaticResource BoolToVisibilityConverter}}"
              Background="#80000000"
              Panel.ZIndex="9999">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" Margin="16" >
                    <hc:LoadingCircle Width="80" Height="80" IsRunning="True"/>
                    <TextBlock Text="{Binding Status}" Foreground="White" FontSize="14" FontWeight="Bold"
                           Margin="0,12,0,0" HorizontalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Page>

    